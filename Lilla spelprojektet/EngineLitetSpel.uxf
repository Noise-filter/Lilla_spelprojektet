<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="11.5.1">
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>260</x>
      <y>820</y>
      <w>50</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;30;30;50</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>230</x>
      <y>870</y>
      <w>120</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Importer
--
Very important</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>440</x>
      <y>120</y>
      <w>210</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;30;190;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>150</x>
      <y>30</y>
      <w>320</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>Engine
--
/Medlemsvariabler/
-m_renderData : struct RenderData**
-m_light : Light**
-m_lightTypes : struct LightTypes**
-m_bufferList : BufferList**
-m_wrapperHLSL : WrapperHLSL
-m_bufferObj : Buffer
-fullScreenQuad : Mesh 
--
/Medlemsfunktioner/
+render() : void
+addRenderData(...) : void
+init(...) : HRESULT
--
	void render();
	bool init(HINSTANCE hInstance, int cmdShow);

private:
	D3D11Handler* d3d;
	WinHandler* win32;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>180</x>
      <y>510</y>
      <w>250</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>Buffer
--
Texture buffer
/Contains world-matrix and textureID/
matrixList : 


-supplyIndex : ID3D11IndexBuffer*
-towerIndex : ID3D11IndexBuffer*
-enemyIndex : ID3D11IndexBuffer*

-meshGUI : ID3D11Buffer*
-supply : ID3D11Buffer*
-tower : ID3D11Buffer*
-enemy : ID3D11Buffer*
-plane : ID3D11Buffer*
-nodes : ID3D11Buffer*

+indexList : ID3D11IndexBuffer**
+vertexList : ID3D11Buffer**
--
+init() : HRESULT
+swapBuffers(RenderData) : void
+getTextureBuffer  
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>630</x>
      <y>30</y>
      <w>310</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>D3D
--
+device : ID3D11Device*
+deviceContext : ID3D11DeviceContext*
+swapChain : IDXGISwapChain*
+depthStencilView : ID3D11DepthStencilView*
+depthStencilState : ID3D11DepthStencilState*
+depthStencil : ID3D11Texture2D*
+renderTargetView : ID3D11RenderTargetView*

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>750</x>
      <y>190</y>
      <w>50</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;30;30;100</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>520</x>
      <y>540</y>
      <w>270</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>D3DMathUtility
--
/Re-Define D3DXVector and D3DXMatrix/
#define Vec2 D3DXVECTOR2
#define Vec3 D3DXVECTOR3
#define Vec4 D3DXVECTOR4
#define Matrix D3DXMATRIX
/Screen dimiensions/
struct MeshGUI
{
  pos : Vec3
  uv  : Vec2
}
struct MeshObj
{
  pos : Vec3
  normal : Vec3
  uv  : Vec2
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>690</x>
      <y>290</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>PassHandler
--
Shader lista
Pass lista
Rendertargets lista

/Flytta allt till D3D så Länge/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>800</x>
      <y>540</y>
      <w>280</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>D3DGraphicUtility
--
enum PASS_STATE
/Include neccessary libraries for rendering/
/Macros for releasing pointers and arrays/
/Detect memory leaks/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>270</x>
      <y>380</y>
      <w>50</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;30;30;130</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>610</x>
      <y>380</y>
      <w>160</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>140;30;140;100;30;100;30;160</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>20</x>
      <y>190</y>
      <w>150</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>130;30;30;30;30;110</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>300</y>
      <w>100</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>WinHandler
--
+getHandle() : HWND</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>780</x>
      <y>380</y>
      <w>180</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30;30;30;100;160;100;160;160</additional_attributes>
  </element>
</diagram>
